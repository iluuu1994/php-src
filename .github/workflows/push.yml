name: Push
on:
  push:
    paths-ignore:
      - docs/*
      - NEWS
      - UPGRADING
      - UPGRADING.INTERNALS
      - README.md
      - CONTRIBUTING.md
      - CODING_STANDARDS.md
    branches:
      - PHP-7.4
      - PHP-8.0
      - PHP-8.1
      - PHP-8.2
      - master
  pull_request:
    branches:
      - '**'
permissions:
  contents: read
jobs:
  LINUX_X64:
    if: false
    strategy:
      fail-fast: false
      matrix:
        include:
          - debug: true
            zts: false
          - debug: false
            zts: true
    name: "LINUX_X64_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}"
    runs-on: ubuntu-20.04
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: Create MSSQL container
        uses: ./.github/actions/setup-mssql
      - name: Create Oracle container
        uses: ./.github/actions/setup-oracle
      - name: apt
        uses: ./.github/actions/apt-x64
      - name: ./configure
        uses: ./.github/actions/configure-x64
        with:
          configurationParameters: >-
            --${{ matrix.debug && 'enable' || 'disable' }}-debug
            --${{ matrix.zts && 'enable' || 'disable' }}-zts
      - name: make
        run: make -j$(/usr/bin/nproc) >/dev/null
      - name: make install
        uses: ./.github/actions/install-linux
      - name: Setup
        uses: ./.github/actions/setup-x64
      - name: Test
        uses: ./.github/actions/test-linux
        with:
          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}
      - name: Test Tracing JIT
        uses: ./.github/actions/test-linux
        with:
          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Tracing JIT
          runTestsParameters: >-
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
            -d opcache.jit_buffer_size=16M
      - name: Verify generated files are up to date
        uses: ./.github/actions/verify-generated-files
  LINUX_X32:
    if: false
    name: LINUX_X32_DEBUG_ZTS
    runs-on: ubuntu-latest
    container:
      image: ubuntu:20.04
    env:
      MYSQL_TEST_HOST: mysql
      PDO_MYSQL_TEST_DSN: mysql:host=mysql;dbname=test
      PDO_MYSQL_TEST_HOST: mysql
    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: root
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: apt
        uses: ./.github/actions/apt-x32
      - name: ./configure
        uses: ./.github/actions/configure-x32
        with:
          configurationParameters: >-
            --enable-debug
            --enable-zts
      - name: make
        run: make -j$(/usr/bin/nproc) >/dev/null
      - name: make install
        uses: ./.github/actions/install-linux-x32
      - name: Test
        uses: ./.github/actions/test-linux
      - name: Test Tracing JIT
        uses: ./.github/actions/test-linux
        with:
          runTestsParameters: >-
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
            -d opcache.jit_buffer_size=16M
  MACOS_DEBUG_NTS:
    if: false
    runs-on: macos-11
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: brew
        uses: ./.github/actions/brew
      - name: ./configure
        uses: ./.github/actions/configure-macos
        with:
          configurationParameters: --enable-debug --disable-zts
      - name: make
        run: |-
          export PATH="/usr/local/opt/bison/bin:$PATH"
          make -j$(sysctl -n hw.logicalcpu) >/dev/null
      - name: make install
        run: sudo make install
      - name: Test
        uses: ./.github/actions/test-macos
        with:
          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}
      - name: Test Tracing JIT
        uses: ./.github/actions/test-macos
        with:
          testArtifacts: ${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }} Tracing JIT
          runTestsParameters: >-
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
            -d opcache.protect_memory=1
            -d opcache.jit_buffer_size=16M
      - name: Verify generated files are up to date
        uses: ./.github/actions/verify-generated-files
  COMMUNITY:
    name: "COMMUNITY"
    runs-on: ubuntu-20.04
    env:
      UBSAN_OPTIONS: print_stacktrace=1
      USE_ZEND_ALLOC: 0
      USE_TRACKED_ALLOC: 1
    steps:
      - name: git checkout
        uses: actions/checkout@v3
      - name: apt
        uses: ./.github/actions/apt-x64
      - name: ./configure
        uses: ./.github/actions/configure-x64
        with:
          configurationParameters: >-
            --enable-debug
            --enable-zts
            CFLAGS='-fsanitize=undefined,address -fno-sanitize-recover -DZEND_TRACK_ARENA_ALLOC'
            LDFLAGS='-fsanitize=undefined,address'
      - name: make
        run: make -j$(/usr/bin/nproc) >/dev/null
      - name: make install
        uses: ./.github/actions/install-linux
      - name: Setup
        run: |
          sudo service mysql start
          mysql -uroot -proot -e "CREATE DATABASE IF NOT EXISTS test"
          mysql -uroot -proot -e "SET GLOBAL local_infile = true"
      - name: Enable Opcache and JIT
        run: |
          echo zend_extension=opcache.so > /etc/php.d/opcache.ini
          echo opcache.enable_cli=1 >> /etc/php.d/opcache.ini
          echo opcache.protect_memory=1 >> /etc/php.d/opcache.ini
          echo opcache.jit_buffer_size=1G >> /etc/php.d/opcache.ini
      - name: Test Wordpress
        if: always()
        run: |
          git clone https://github.com/WordPress/wordpress-develop.git wordpress --depth=1
          cd wordpress
          git rev-parse HEAD
          export ASAN_OPTIONS=exitcode=139
          php /usr/bin/composer install --no-progress --ignore-platform-reqs
          cp wp-tests-config-sample.php wp-tests-config.php
          php -r "$(cat <<- 'PHP'
            $c = file_get_contents('wp-tests-config.php');
            $c = str_replace('youremptytestdbnamehere', 'test', $c);
            $c = str_replace('yourusernamehere', 'root', $c);
            $c = str_replace('yourpasswordhere', 'root', $c);
            file_put_contents('wp-tests-config.php', $c);
          PHP
          )"
          php vendor/bin/phpunit || EXIT_CODE=$?
          if [ $EXIT_CODE -gt 128 ]; then
            exit 1
          fi
