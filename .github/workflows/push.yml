name: Push
on:
  push:
    paths-ignore:
      - docs/*
      - NEWS
      - UPGRADING
      - UPGRADING.INTERNALS
      - README.md
      - CONTRIBUTING.md
      - CODING_STANDARDS.md
    branches:
      - PHP-7.4
      - PHP-8.0
      - PHP-8.1
      - master
  pull_request:
    branches:
      - '**'
jobs:
  LINUX_X64:
    strategy:
      fail-fast: false
      matrix:
        include:
          - debug: true
            zts: false
          - debug: false
            zts: true
    name: "LINUX_X64_${{ matrix.debug && 'DEBUG' || 'RELEASE' }}_${{ matrix.zts && 'ZTS' || 'NTS' }}"
    runs-on: ubuntu-20.04
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: Create MSSQL container
        uses: ./.github/actions/setup-mssql
      - name: Create Oracle container
        uses: ./.github/actions/setup-oracle
      - name: apt
        uses: ./.github/actions/apt-x64
      - name: ./configure
        uses: ./.github/actions/configure-x64
        with:
          configurationParameters: >-
            --${{ matrix.debug && 'enable' || 'disable' }}-debug
            --${{ matrix.zts && 'enable' || 'disable' }}-zts
      - name: make
        run: make -j$(/usr/bin/nproc) >/dev/null
      - name: make install
        uses: ./.github/actions/install-linux
      - name: Setup
        uses: ./.github/actions/setup-x64
      - name: Test
        uses: ./.github/actions/test-linux
      - name: Test Tracing JIT
        uses: ./.github/actions/test-linux
        with:
          runTestsParameters: >-
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
            -d opcache.jit_buffer_size=16M
      - name: Verify generated files are up to date
        uses: ./.github/actions/verify-generated-files
  MACOS_DEBUG_NTS:
    runs-on: macos-11
    steps:
      - name: git checkout
        uses: actions/checkout@v2
      - name: brew
        uses: ./.github/actions/brew
      - name: ./configure
        uses: ./.github/actions/configure-macos
        with:
          configurationParameters: --enable-debug --disable-zts
      - name: make
        run: |-
          export PATH="/usr/local/opt/bison/bin:$PATH"
          make -j$(sysctl -n hw.logicalcpu) >/dev/null
      - name: make install
        run: sudo make install
      - name: Test
        uses: ./.github/actions/test-macos
      - name: Test Tracing JIT
        uses: ./.github/actions/test-macos
        with:
          runTestsParameters: >-
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
            -d opcache.protect_memory=1
            -d opcache.jit_buffer_size=16M
      - name: Verify generated files are up to date
        uses: ./.github/actions/verify-generated-files
  MSAN:
    #needs: GENERATE_MATRIX
    #if: ${{ needs.GENERATE_MATRIX.outputs.branches != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        #branch: ${{ fromJson(needs.GENERATE_MATRIX.outputs.branches) }}
        include:
          - branch: { name: 'PR', ref: '' }
    name: "${{ matrix.branch.name }}_MSAN"
    runs-on: ubuntu-20.04
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        #with:
        #  ref: ${{ matrix.branch.ref }}
      - name: Create MSSQL container
        uses: ./.github/actions/setup-mssql
      - name: Create Oracle container
        uses: ./.github/actions/setup-oracle
      - name: apt
        uses: ./.github/actions/apt-x64
      - name: ./configure
        run: |
          export CC=clang
          export CXX=clang++
          export CFLAGS="-DZEND_TRACK_ARENA_ALLOC"
          ./buildconf --force
          # msan requires all used libraries to be instrumented,
          # so we should avoiding linking against anything but libc here
          ./configure \
            --enable-debug \
            --enable-zts \
            --enable-option-checking=fatal \
            --prefix=/usr \
            --without-sqlite3 \
            --without-pdo-sqlite \
            --without-libxml \
            --disable-dom \
            --disable-simplexml \
            --disable-xml \
            --disable-xmlreader \
            --disable-xmlwriter \
            --without-pcre-jit \
            --disable-opcache-jit \
            --enable-phpdbg \
            --enable-fpm \
            --with-pdo-mysql=mysqlnd \
            --with-mysqli=mysqlnd \
            --disable-mysqlnd-compression-support \
            --without-pear \
            --enable-exif \
            --enable-sysvsem \
            --enable-sysvshm \
            --enable-shmop \
            --enable-pcntl \
            --enable-mbstring \
            --disable-mbregex \
            --enable-sockets \
            --enable-bcmath \
            --enable-calendar \
            --enable-ftp \
            --enable-zend-test \
            --enable-werror \
            --enable-memory-sanitizer \
            --with-config-file-path=/etc \
            --with-config-file-scan-dir=/etc/php.d
      - name: make
        run: make -j$(/usr/bin/nproc) >/dev/null
      - name: make install
        run: |
          sudo make install
          sudo mkdir     /etc/php.d
          sudo chmod 777 /etc/php.d
          echo mysqli.default_socket=/var/run/mysqld/mysqld.sock    > /etc/php.d/mysqli.ini
          echo pdo_mysql.default_socket=/var/run/mysqld/mysqld.sock > /etc/php.d/pdo_mysql.ini
      - name: Setup
        uses: ./.github/actions/setup-x64
      - name: Test
        uses: ./.github/actions/test-linux
        with:
          runTestsParameters: >-
            --msan
      - name: Test Opcache
        uses: ./.github/actions/test-linux
        with:
          runTestsParameters: >-
            --msan
            -d zend_extension=opcache.so
            -d opcache.enable_cli=1
      - name: Verify generated files are up to date
        uses: ./.github/actions/verify-generated-files
